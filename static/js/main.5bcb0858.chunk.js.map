{"version":3,"sources":["utils/createUUID.js","utils/suggestionsData.js","components/NewStudent.jsx","components/NewGroup.jsx","components/StudentsList.jsx","components/Main.jsx","App.js","reportWebVitals.js","index.js"],"names":["createUUID","dt","Date","getTime","replace","c","r","Math","random","floor","toString","suggestdata","id","text","NewStudent","state","nameInput","descriptionInput","emailInput","tags","tagsInput","suggestions","showWarning","warningMesseage","handleNameChange","event","setState","target","value","handleDescriptionChange","handleEmailChange","handleTagChange","e","handleSuggestion","handleKeyDown","keyCode","preventDefault","length","includes","handleAddTags","suggestFilterTags","filter","suggest","toLowerCase","handleDelete","i","newTags","tag","j","appendStudent","props","addStudent","className","type","placeholder","this","onChange","map","onClick","htmlFor","onKeyDown","Boolean","style","color","Component","NewGroup","groupNameInput","members","handleGroupNameInput","appendGroup","addGroup","newName","newDescription","newEmail","name","description","email","render","addedStudents","member","StudentList","handleTagsSearchChange","tagsSearch","handleDescriptionSearchChange","descriptionSearch","handleNewTagChange","newTag","handleEditButton","isEditing","studentId","console","log","handleCancelButton","handleNewNameChange","handleNewDescriptionChange","handleNewEmailChange","handleSaveButton","editStudent","editStudentsList","filteredStudentsList","membersList","el","find","filteredStudents","filteredGroupStudentsList","groupsList","groupName","m","memberTag","Main","nanoid","editedMembersList","newGroupName","students","path","exact","App","basename","process","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5bcb0858.chunk.js","sourcesContent":["const createUUID = () => {\r\n    let dt = new Date().getTime();\r\n    let uuid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(\r\n      /[xy]/g,\r\n      function (c) {\r\n        let r = (dt + Math.random() * 16) % 16 | 0;\r\n        dt = Math.floor(dt / 16);\r\n        return (c === \"x\" ? r : (r && 0x3) || 0x8).toString(16);\r\n      }\r\n    );\r\n    return uuid;\r\n  };\r\n\r\nexport default createUUID;\r\n  ","const suggestdata = [\r\n    { id: 1, text: \"React\" },\r\n    { id: 2, text: \"JavaScript\" },\r\n    { id: 3, text: \"Angular\" },\r\n    { id: 4, text: \"React Native\" },\r\n    { id: 5, text: \"Symphony\" },\r\n    { id: 6, text: \"PHP\" },\r\n    { id: 7, text: \"Python\" },\r\n    { id: 8, text: \"Django\" }\r\n  ];\r\n\r\n  export default suggestdata;","import { Component } from 'react';\r\nimport createUUID from \"../utils/createUUID\";\r\nimport suggestdata from \"../utils/suggestionsData.js\";\r\nimport './NewStudent.css';\r\n\r\n\r\n\r\nclass NewStudent extends Component {\r\n    state = {\r\n        nameInput: \"\",\r\n        descriptionInput: \"\",\r\n        emailInput: \"\",\r\n\r\n        tags: [],\r\n        tagsInput: \"\",\r\n        suggestions: [],\r\n\r\n        showWarning: false,\r\n    \r\n    }\r\n    warningMesseage = \"All inputs must be filled!\";\r\n    \r\n\r\n    handleNameChange = (event) => {\r\n        this.setState({\r\n          nameInput: event.target.value,\r\n        });\r\n    };\r\n\r\n    handleDescriptionChange = (event) => {\r\n        this.setState({\r\n          descriptionInput: event.target.value,\r\n        });\r\n      };\r\n    \r\n    handleEmailChange = (event) => {\r\n        this.setState({\r\n          emailInput: event.target.value,\r\n        });\r\n    };\r\n\r\n  handleTagChange = (e) => {\r\n      const { value } = e.target;\r\n      this.setState({\r\n        tagsInput: value,\r\n      });\r\n      this.handleSuggestion();\r\n    };\r\n\r\n    handleKeyDown = (e) => {\r\n      if (e.keyCode === 9) {\r\n        e.preventDefault();\r\n      }\r\n      const { tags, tagsInput, suggestions } = this.state;\r\n      const text = suggestions.length ? suggestions[0].text : tagsInput;\r\n      if ([9, 13].includes(e.keyCode) && text) {\r\n        this.setState({\r\n          tags: [...tags, text],\r\n          tagsInput: \"\",\r\n        });\r\n      }\r\n    };\r\n\r\n    handleAddTags = (text) => {\r\n      this.setState({\r\n        tags: [...this.state.tags, text],\r\n        tagsInput: \"\",\r\n      });\r\n    };\r\n\r\n    handleSuggestion = () => {\r\n      const { tagsInput, tags } = this.state;\r\n      const suggestFilterInput = suggestdata.filter((suggest) =>\r\n        suggest.text.toLowerCase().includes(tagsInput.toLowerCase())\r\n      );\r\n  \r\n      const suggestFilterTags = suggestFilterInput.filter(\r\n        (suggest) => !tags.includes(suggest.text)\r\n      );\r\n  \r\n      this.setState({\r\n        suggestions: suggestFilterTags,\r\n      });\r\n    };\r\n\r\n\r\n  handleDelete = (i) => {\r\n      const { tags } = this.state;\r\n      const newTags = tags.filter((tag, j) => i !== j);\r\n      this.setState({\r\n        tags: newTags,\r\n      });\r\n    };\r\n\r\n\r\n  appendStudent = () => {\r\n      if (\r\n          this.state.nameInput === \"\" ||\r\n          this.state.descriptionInput === \"\" ||\r\n          this.state.emailInput === \"\" ||\r\n          this.state.tags === \"\"\r\n        ) {\r\n          this.setState({\r\n            nameInput: \"\",\r\n            descriptionInput: \"\",\r\n            emailInput: \"\",\r\n            tagsInput: \"\",\r\n            showWarning: true,\r\n          });\r\n        } else {\r\n          this.props.addStudent(this.state.nameInput, this.state.descriptionInput, this.state.emailInput, ...this.state.tags)\r\n          this.setState({\r\n              nameInput: \"\",\r\n              descriptionInput: \"\",\r\n              emailInput: \"\",\r\n              tags: [],\r\n              tagsInput: \"\",\r\n              showWarning: false,\r\n          });\r\n        };\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        \r\n        return (\r\n        <>\r\n          <div className=\"input-container\">\r\n            <div className=\"add-input\">\r\n              <input\r\n                  id=\"name-input\"\r\n                  type=\"text\"\r\n                  placeholder=\"name\"\r\n                  value={this.state.nameInput}\r\n                  onChange={this.handleNameChange}\r\n              ></input>\r\n            </div>\r\n            <div className=\"add-input\">\r\n              <input\r\n                  id = \"description-input\"\r\n                  type=\"text\"\r\n                  placeholder=\"description\"\r\n                  value={this.state.descriptionInput}\r\n                  onChange={this.handleDescriptionChange}\r\n              ></input>\r\n            </div>\r\n            <div className=\"add-input\">\r\n              <input\r\n                  id = \"email-input\"\r\n                  type=\"text\"\r\n                  placeholder=\"email\"\r\n                  value={this.state.emailInput}\r\n                  onChange={this.handleEmailChange}\r\n              ></input>\r\n            </div>\r\n          \r\n\r\n            <div className=\"added-tags\">\r\n                {this.state.tags.map((tag, i) => (\r\n                    <div key={createUUID(i)} className=\"tag\">\r\n                        {tag}\r\n                        <div className=\"remove-tag btn btn-danger btn-sm\" onClick={() => this.handleDelete(i)}>\r\n                        ×\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <br/>\r\n            <div className=\"tags-input\">\r\n            <label htmlFor=\"tag-input\">Press Enter to add Tag: </label>\r\n            <input\r\n                id=\"tag-input\"\r\n                type=\"text\"\r\n                value={this.state.tagsInput}\r\n                onChange={this.handleTagChange}\r\n                onKeyDown={this.handleKeyDown}\r\n                placeholder=\"add new tag\"\r\n            />\r\n\r\n            {this.state.tagsInput && Boolean(this.state.suggestions.length) && (\r\n                <div className=\"tags-suggestions\">\r\n                    {this.state.suggestions.map((suggest) => (\r\n                        <div\r\n                          key={createUUID(suggest)}\r\n                          className=\"suggestion-item\"\r\n                          onClick={() => this.handleAddTags(suggest.text)}\r\n                          >\r\n                          {suggest.text}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                )}\r\n            </div>\r\n        \r\n            \r\n            <button className=\"btn btn-primary add-btn\" onClick={this.appendStudent}>Add</button>\r\n\r\n\r\n            {this.state.showWarning && (\r\n                <h3 style={{ color: \"red\" }}>{this.warningMesseage}</h3>    \r\n            )}\r\n          </div>\r\n\r\n\r\n        </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewStudent;","import { Component } from 'react';\r\nimport NewStudent from './NewStudent';\r\nimport createUUID from \"../utils/createUUID\";\r\nimport './NewGroup.css';\r\n\r\nclass NewGroup extends Component {\r\n    state = {\r\n        groupNameInput: \"\",\r\n        members: [],\r\n        showWarning: false\r\n    }\r\n    warningMesseage = \"You must write group name!\";\r\n\r\n    handleGroupNameInput = (event) => {\r\n        this.setState({\r\n            groupNameInput: event.target.value,\r\n        });\r\n    };\r\n\r\n    \r\n\r\n    appendGroup = () => {\r\n        if (this.state.groupNameInput === \"\") {\r\n            this.setState({\r\n              showWarning: true,\r\n            });\r\n          } else {\r\n            this.props.addGroup(this.state.groupNameInput, this.state.members)\r\n            this.setState({\r\n                groupNameInput: \"\",\r\n                members: [],\r\n                showWarning: false,\r\n            });\r\n          };\r\n    }\r\n\r\n    addStudent = (newName, newDescription, newEmail, ...newTags) => {\r\n        this.setState({\r\n            members: [\r\n              ...this.state.members,\r\n              {\r\n                name: newName,\r\n                description: newDescription,\r\n                email: newEmail,\r\n                tags: [...newTags],\r\n              },\r\n            ],\r\n          });\r\n    }\r\n\r\n\r\n    render = () => {\r\n\r\n        const addedStudents = this.state.members.map((member) => (\r\n                \r\n            <li key={createUUID(member)}>\r\n                <p className=\"card-text\">{member.name}</p>\r\n                <p className=\"card-text\">{member.description}</p>\r\n                <p className=\"card-text\">{member.email}</p>\r\n                <ul>\r\n                    {member.tags.map((tag) => (\r\n                        <li key={createUUID(tag)}>#{tag}</li>\r\n                    ))}\r\n                </ul>\r\n             </li>\r\n         ))\r\n\r\n        return (\r\n        <>\r\n            <div className=\"group-container\">\r\n                <input\r\n                    id = \"group-name-input\"\r\n                    type=\"text\"\r\n                    placeholder=\"group name\"\r\n                    value={this.state.groupNameInput}\r\n                    onChange={this.handleGroupNameInput}\r\n                ></input>\r\n                <br></br>\r\n                <label>Add new group member: </label>\r\n                <NewStudent addStudent={this.addStudent}></NewStudent>\r\n                <h5>Students in group: </h5>\r\n                <ul>\r\n                    {this.state.members && Boolean(this.state.members.length) && (\r\n                        <div className=\"group-member\">\r\n                            {addedStudents}\r\n                        </div>\r\n                        )}\r\n                </ul>\r\n                \r\n\r\n                <button className=\"btn btn-primary\" onClick={this.appendGroup}>Add group</button>\r\n\r\n                {this.state.showWarning && (\r\n                    <h3 style={{ color: \"red\" }}>{this.warningMesseage}</h3>    \r\n                )}\r\n            </div>\r\n        </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewGroup;\r\n","import { Component } from 'react';\r\nimport createUUID from \"../utils/createUUID\";\r\nimport './StudentsList.css';\r\n\r\n\r\nclass StudentList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tagsSearch: \"\",\r\n            descriptionSearch: \"\",\r\n            isEditing: false,\r\n            newName: \"\",\r\n            newDescription: \"\",\r\n            newEmail: \"\",\r\n            newTag: \"\",\r\n            newTags: [],\r\n            studentId: \"\",\r\n            showWarning: false,   \r\n        }\r\n        \r\n      }\r\n \r\n    warningMesseage = \"You must input all fields!\";\r\n    handleTagsSearchChange = (event) => {\r\n        this.setState({\r\n            tagsSearch: event.target.value,\r\n        });\r\n    };\r\n    \r\n    handleDescriptionSearchChange = (event) => {\r\n        this.setState({\r\n          descriptionSearch: event.target.value,     \r\n        });\r\n    };\r\n\r\n    handleNewTagChange = (event) => {\r\n        this.setState({\r\n          newTag: event.target.value,\r\n        });\r\n      };\r\n  \r\n    handleKeyDown = (e) => {\r\n        if (e.keyCode === 9) {\r\n            e.preventDefault();\r\n        }\r\n        const { newTag, newTags} = this.state;\r\n        if ([9, 13].includes(e.keyCode) && newTag) {\r\n            this.setState({\r\n            newTags: [...newTags, newTag],\r\n            newTag: \"\",\r\n            });\r\n        }\r\n    };\r\n    \r\n\r\n    handleEditButton = (id) => {\r\n        this.setState({\r\n            isEditing: true,\r\n            studentId: id\r\n          }, () => {\r\n            console.log(\"id\")\r\n            console.log(id)\r\n            console.log(\"student id\")\r\n            console.log(this.state.studentId)\r\n          });\r\n          \r\n    }\r\n\r\n    handleCancelButton = () => {\r\n        this.setState({\r\n            isEditing: false\r\n          });\r\n    }\r\n\r\n    handleNewNameChange = (event) => {\r\n        this.setState({\r\n            newName: event.target.value,\r\n          });\r\n      }\r\n\r\n    handleNewDescriptionChange = (event) => {\r\n    this.setState({\r\n        newDescription: event.target.value,\r\n        });\r\n    }\r\n\r\n    handleNewEmailChange = (event) => {\r\n        this.setState({\r\n            newEmail: event.target.value,\r\n          });\r\n      }\r\n\r\n\r\n    handleSaveButton = () => {\r\n        if (this.state.newName === \"\" ||\r\n            this.state.newDescription === \"\" ||\r\n            this.state.newEmail === \"\" ||\r\n            this.state.newTags === \"\") {\r\n            this.setState({\r\n              showWarning: true,\r\n            });\r\n        } else {\r\n            this.props.editStudent(this.state.studentId, this.state.newName, this.state.newDescription, this.state.newEmail, ...this.state.newTags);\r\n\r\n            this.setState({\r\n                newName: \"\",\r\n                newDescription: \"\",\r\n                newEmail: \"\",\r\n                newTags: [],\r\n                isEditing: false,\r\n                studentId: \"\",\r\n                showWarning: false,\r\n            });\r\n        }\r\n    }\r\n\r\n  \r\n    render = () => {\r\n        /*const studentsList = this.props.membersList.map((el) => \r\n            (\r\n                <>\r\n                <li key={createUUID(el.id)}>\r\n                    {el.name}\r\n                    {el.description}\r\n                    {el.email}\r\n                    <ul>\r\n                        {el.tags.map((tag) => (\r\n                            <li key={createUUID(tag)}>#{tag}</li>\r\n                        ))}\r\n                    </ul>\r\n                    \r\n                </li>\r\n                <button onClick={() => this.handleEditButton(el.id)}>Edit</button>\r\n                </>\r\n            )\r\n        )*/\r\n\r\n        const editStudentsList =\r\n                (\r\n                    <>\r\n                        <label>Edit name</label>\r\n                        <input \r\n                            value={this.state.newName}\r\n                            onChange={this.handleNewNameChange}\r\n                        ></input>\r\n                        <label>Edit description</label>\r\n                        <input \r\n                            value={this.state.newDescription}\r\n                            onChange={this.handleNewDescriptionChange}\r\n                        ></input>\r\n                        <label>Edit email</label>\r\n                        <input \r\n                            value={this.state.newEmail}\r\n                            onChange={this.handleNewEmailChange}\r\n                        ></input>\r\n                        <label>Edit tags</label>\r\n                        <h6>Press enter to add</h6>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={this.state.newTag}\r\n                            onChange={this.handleNewTagChange}\r\n                            onKeyDown={this.handleKeyDown}\r\n                        />\r\n                        <h5>Added tags: </h5>\r\n                            <ul>\r\n                                {this.state.newTags && Boolean(this.state.newTags.length) && (\r\n                                    <div className=\"group-new-tags\">\r\n                                        <ul>\r\n                                            {this.state.newTags.map((tag) => (\r\n                                                <li key={createUUID(tag)}>#{tag}</li>\r\n                                            ))}\r\n                                        </ul>\r\n                                    </div>\r\n                                    )}\r\n                            </ul>\r\n        \r\n                        <button className=\"btn btn-primary\" onClick={this.handleSaveButton}>Save</button>\r\n                        <br></br>\r\n                        <button className=\"btn btn-primary\" onClick={this.handleCancelButton}>Cancel</button>\r\n                        <br></br>\r\n                        {this.state.showWarning && (\r\n                            <h3 style={{ color: \"red\" }}>{this.warningMesseage}</h3>    \r\n                        )}\r\n                    </>\r\n                )\r\n\r\n        const filteredStudentsList = this.props.membersList.filter(el => ((el.description.includes(this.state.descriptionSearch)) && (el.tags.find(tag => tag.includes(this.state.tagsSearch))) )).map(filteredStudents => (\r\n            <>\r\n            \r\n            <li key={createUUID(filteredStudents)}>\r\n                <p className=\"card-text\">{filteredStudents.name}</p>\r\n                <p className=\"card-text\">{filteredStudents.description}</p>\r\n                <p className=\"card-text\">{filteredStudents.email}</p>\r\n                <ul>\r\n                    {filteredStudents.tags.map((tag) => (\r\n                        <li key={createUUID(tag)}>#{tag}</li>\r\n                    ))}\r\n                </ul>\r\n                \r\n            </li>\r\n            <button className=\"btn btn-primary\" onClick={() => this.handleEditButton(filteredStudents.id)}>Edit</button>\r\n            </>\r\n          ))\r\n        \r\n        /*const groupStudentsList = this.props.groupsList.map(el =>\r\n            <>\r\n                <h4 className=\"collapse-head\"> {el.groupName} </h4>\r\n                <ul>\r\n                    {el.members.map((member) => (\r\n                        <li key={createUUID(member)}>\r\n                            <ul>\r\n                                <li key={createUUID(member.name)}>{member.name}</li>\r\n                                <li key={createUUID(member.description)}>{member.description}</li>\r\n                                <li key={createUUID(member.email)}>{member.email}</li>\r\n                                <li key={createUUID(member.tags)}>\r\n                                    <ul>\r\n                                        {member.tags.map((memberTag) => (\r\n                                            <li key={createUUID(memberTag)}>#{memberTag}</li>\r\n                                        ))}\r\n                                    </ul>\r\n                                </li>\r\n                            </ul>\r\n                            \r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </>\r\n        )*/\r\n\r\n        const filteredGroupStudentsList = this.props.groupsList.map(el =>\r\n            <>\r\n            \r\n                <h4 className=\"card-subtitle\"> {el.groupName} </h4>\r\n               \r\n                    {el.members.filter(m => (m.description.includes(this.state.descriptionSearch)) && (m.tags.find(tag => tag.includes(this.state.tagsSearch)))).map(member => (\r\n                            <ul className=\"list-group list-group-flush\">\r\n                                <li key={createUUID(member.id)} className=\"list-group-item\">\r\n                                \r\n                                    <p className=\"card-text\">{member.name}</p>\r\n                                    <p className=\"card-text\">{member.description}</p>\r\n                                    <p className=\"card-text\">{member.email}</p>\r\n                                    <ul>\r\n                                        {member.tags.map((memberTag) => (\r\n                                            <li key={createUUID(memberTag)}>#{memberTag}</li>\r\n                                        ))}\r\n                                    </ul>  \r\n                                </li>  \r\n                            </ul>\r\n                    ))}\r\n\r\n            </>\r\n        )\r\n    \r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <br></br>\r\n        <div className=\"search-content container\">\r\n            <div className=\"row\">\r\n                <input className=\"search-input col-sm\"\r\n                    type=\"text\"\r\n                    placeholder=\"search by tags\"\r\n                    value={this.state.tagsSearch}\r\n                    onChange={this.handleTagsSearchChange}\r\n                 ></input>\r\n            \r\n            \r\n                <input className=\"search-input col-sm\"\r\n                    type=\"text\"\r\n                    placeholder=\"search by description\"\r\n                    value={this.state.descriptionSearch}\r\n                    onChange={this.handleDescriptionSearchChange}\r\n                ></input>\r\n            </div>\r\n        </div>\r\n        \r\n       \r\n        {/*<h3>List of students</h3>\r\n        <ul>\r\n            {this.state.isEditing ? editStudentsList : studentsList}\r\n        </ul>*/}\r\n        <div className = \"list-container\">\r\n            <div className = \"list-child card\">\r\n            \r\n            <div className=\"card-body\">\r\n                <h3 className=\"card-title\">List of students</h3>\r\n                <h5 className=\"card-subtitle\">I've found {filteredStudentsList.length} students!</h5>\r\n                <br></br>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    {this.state.isEditing ? editStudentsList : filteredStudentsList}\r\n                </ul>     \r\n                </div>\r\n            </div>\r\n            <div className = \"list-child card\">\r\n                <h3 className=\"card-title\">Students groups</h3>\r\n                {filteredGroupStudentsList}\r\n                \r\n                \r\n            </div>\r\n\r\n        </div>\r\n        \r\n        {/*<h3>Students groups</h3>\r\n            {groupStudentsList}*/}\r\n      \r\n        </>\r\n        )\r\n    }\r\n      \r\n  }\r\n\r\n  export default StudentList ","import { Component } from 'react';\r\n\r\nimport NewStudent from './NewStudent';\r\nimport NewGroup from './NewGroup';\r\nimport StudentList from './StudentsList';\r\n\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport { nanoid } from \"nanoid\";\r\n\r\nimport './Main.css';\r\n\r\n\r\nclass Main extends Component {\r\n    state = {\r\n      membersList: [\r\n        {\r\n          id: \"member\" + nanoid(),\r\n          name: \"Arek\",\r\n          description: \"Arek jest świetnym architektem, lubi projektować systemy\",\r\n          email: \" arek.architekt@gmail.com\",\r\n          tags: [\"docker\", \"AWS\", \"kubernetes\", \"scrum\"],\r\n        },\r\n        {\r\n          id: \"member\" + nanoid(),\r\n          name: \"Marcin\",\r\n          description: \"Marcin nie jest świetnym architektem, lubi projektować systemy\",\r\n          email: \" marcin.architekt@gmail.com\",\r\n          tags: [\"js\"],\r\n        },\r\n        {\r\n          id: \"member\" + nanoid(),\r\n          name: \"Anna\",\r\n          description: \"Anna interesuje się Pythonem i data science\",\r\n          email: \" anna.nowak@gmail.com\",\r\n          tags: [\"Python\"],\r\n        },\r\n      ],\r\n      groupsList: [\r\n        {\r\n          groupName: \"grupa 1\",\r\n          members:[{\r\n              id: \"member\" + nanoid(),\r\n              name: \"Julia\",\r\n              description: \"Julia lubi Reacta\",\r\n              email: \"julia.kowalska@gmail.com\",\r\n              tags: [\"React\", \"JavaScript\"]\r\n          },\r\n          {\r\n              id: \"member\" + nanoid(),\r\n              name: \"Andrzej\",\r\n              description: \"Andrzej lubi C++\",\r\n              email: \"andrzej.maj@gmail.com\",\r\n              tags: [\"C++\", \"C#\", \"C\"]\r\n          }],\r\n          \r\n        },\r\n        \r\n      ],\r\n\r\n\r\n    }\r\n\r\n    addStudent = (newName, newDescription, newEmail, ...newTags) => {\r\n        this.setState({\r\n            membersList: [\r\n              ...this.state.membersList,\r\n              {\r\n                id: \"member\" + nanoid(),\r\n                name: newName,\r\n                description: newDescription,\r\n                email: newEmail,\r\n                tags: [...newTags],\r\n              },\r\n            ],\r\n\r\n          });\r\n    }\r\n\r\n    editStudent = (id, newName, newDescription, newEmail, ...newTags) => {\r\n      const editedMembersList = this.state.membersList.map(member => {\r\n     \r\n        if (id === member.id) {\r\n          \r\n          return {...member, name: newName, description: newDescription, email: newEmail, tags: newTags}\r\n        }\r\n        return member;\r\n      });\r\n      this.setState({\r\n        membersList: editedMembersList\r\n      })\r\n    }\r\n\r\n    addGroup = (newGroupName, students) => {\r\n      this.setState({\r\n        groupsList: [\r\n          ...this.state.groupsList,\r\n          {\r\n            groupName: newGroupName,\r\n            members: students,\r\n          },\r\n        ],\r\n\r\n      });\r\n\r\n    }\r\n\r\n\r\n    render = () => {\r\n        return (\r\n          <>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n                <section><StudentList membersList={this.state.membersList} groupsList={this.state.groupsList} editStudent={this.editStudent}/></section>\r\n            </Route>\r\n            <Route path=\"/newStudent\">\r\n                <section><NewStudent addStudent={this.addStudent}/></section>\r\n            </Route>\r\n            <Route path=\"/newGroup\">\r\n              {/* To jest komentarz addStudent={this.addMemberStudent??}*/}\r\n                <section><NewGroup addGroup={this.addGroup}/></section>\r\n            </Route>\r\n           \r\n            <Route>\r\n                <section><h2>404 not found</h2></section>\r\n            </Route>\r\n          </Switch>\r\n          </>\r\n        )\r\n    }\r\n      \r\n  }\r\n\r\n  export default Main ","import './App.css';\nimport Main from  './components/Main';\nimport {BrowserRouter as Router, NavLink} from 'react-router-dom';\n\n\nfunction App() {\n  return (\n    <>\n      <Router basename={process.env.PUBLIC_URL}>\n        <h2>Tinder Project App</h2>\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n              <NavLink to=\"/\" exact className=\"navbar-brand\">Student List</NavLink>\n              <NavLink to=\"/newStudent\" className=\"nav-link\">Add New Student</NavLink>\n              <NavLink to=\"/newGroup\" className=\"nav-link\">Add New Group</NavLink>\n          </nav>\n        <Main /> \n      </Router>\n    </>\n   \n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}